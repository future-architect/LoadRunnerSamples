# Comment line starts with '#'
#     This is a comment sentence.

# The line written with following format will be parsed
#     parameter = value

# A parameter must begin with a letter and contain only alphanumeric characters and '_'
#     Valid:   This_Is_Parameter = value
#     Valid:   P0123456789 =  value
#     Valid:   Spaces_after_param    =   value
#     Valid:   Empty_Value = 
#     Invalid: 0_Starts_With_Num = value
#     Invalid: Has-Hyphen = value
#     Invalid: Has&Symbol = value
#     Invalid: Param with space = value

# The URL to be tested (Required)
url = http://servername.example.com/base_url/to_be_tested/

# Think time to be applied (Required)
#     Specify in milliseconds
think_time = 2000

# Proxy settings (Optional)
#     Specify proxy:port or pac url
proxy = proxy.servername.example.com:8000
proxy_pac = 

# Proxy login user/password settings (Optional)
#     Only used when 'proxy' parameter is set
#     Wrap 'proxy_user_pw' parameter with @[ and ]
#     and wrapped string will be decrypted by lr_decrypt()
proxy_user = domain\username
proxy_user_pw = @[57c9644bf566fe635ac5d4f9]

# SSL version (Optional)
#     Available options: 2, 3, 2&3, TLS, TLS1.1, TLS1.2
ssl_version = 2&3

# Conditional parameter sample
#     Parameter with (param_name:conditional_value) is parsed and evaluated
#     only when param_name == conditional_value
type = A01
some_option(type:A01) = This value is set when type == A01
some_option(type:B01) = This value is set when type == B01

[section_example]
This
sentence
within the [section] heading above,
will be
concatenated and stored in 'section_example'
parameter.

Whitespaces are trimmed.

Within a section, parameter = value pair is ignored
parameter = value
until the next section appears or reaches end of the file.

[new_section_example]
This is a new section.
